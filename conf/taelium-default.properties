################################################################################
# Copyright © 2013-2016 The Nxt Core Developers.                               #
# Copyright © 2016-2017 Jelurida IP B.V.                                       #
#                                                                              #
# See the LICENSE.txt file at the top-level directory of this distribution     #
# for licensing information.                                                   #
#                                                                              #
# Unless otherwise agreed in a custom licensing agreement with Jelurida B.V.,  #
# no part of the Nxt software, including this file, may be copied, modified,   #
# propagated, or distributed except according to the terms contained in the    #
# LICENSE.txt file.                                                            #
#                                                                              #
# Removal or modification of this copyright notice is prohibited.              #
#                                                                              #
################################################################################


tael.defaultPeers=54.255.200.180;52.221.230.252;220.255.19.120
#220.255.29.120;35.176.175.56;13.211.6.116;54.255.130.192;52.77.209.57;54.248.178.106;18.188.127.41;
#35.176.175.56;13.211.6.116;54.255.130.192;52.77.209.57;
#;52.77.209.57
tael.wellKnownPeers=54.255.200.180;52.221.230.252;220.255.19.120
#220.255.29.120;35.176.175.56;13.211.6.116;54.255.130.192;52.77.209.57;54.248.178.106;18.188.127.41;
#35.176.175.56;13.211.6.116;54.255.130.192;52.77.209.57;
#;52.77.209.57


tael.apiServerPort=11111
tael.apiServerSSLPort=22222
tael.peerServerPort=55555



#### SYSTEM ####

# Set the socks proxy host.
#socksProxyHost=localhost

# Set the socks proxy port.
#socksProxyPort=9050



#### PEER NETWORKING ####


# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to
# peers, and may be different from tael.peerServerPort (useful if you do port
# forwarding behind a router).
tael.myAddress=

# My platform, to be announced to peers.
tael.myPlatform=

# My hallmark, if available.
tael.myHallmark=



# Known bad peers to be blacklisted.
tael.knownBlacklistedPeers=

# Default initial peers used for testnet only. Only used if nxt.usePeersDb=true.
# Do not modify. Add custom testnet peers to nxt.testnetPeers instead.
tael.defaultTestnetPeers=

# Well known testnet peers.
tael.testnetPeers=

# Use WebSocket connection if supported by the remote peer.
tael.useWebSockets=true

# WebSocket connection idle timeout (milliseconds).
tael.webSocketIdleTimeout=900000

# Consider a new transaction or block sent after 10 peers have received it.
tael.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
tael.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
tael.enablePeerServerGZIPFilter=true

#### API SERVER ####
# Hosts from which to allow http/json API requests, if enabled. Set to * to
# allow all. Can also specify networks in CIDR notation, e.g. 192.168.1.0/24.
tael.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];



# Enable UPnP for the API ports.
tael.enableAPIUPnP=false

# Host interface on which to listen for http/json API request, default localhost
# only. Set to 0.0.0.0 to allow the API server to accept requests from all
# network interfaces, including IPv6.
tael.apiServerHost=127.0.0.1

# Directory with html and javascript files for the new client UI, and admin
# tools utilizing the http/json API.
tael.apiResourceBase=./html/www

# Default page for the API server.
tael.apiWelcomeFile=index.html

# Java API documentation directory, optional.
tael.javadocResourceBase=./html/doc


# Enable SSL for the API server (also need to set nxt.keyStorePath and
# nxt.keyStorePassword).
# Non-SSL connections will be disabled if nxt.apiServerSSLPort is equal to
# nxt.apiServerPort.
# Otherwise, both SSL and non-SSL connections will be accepted.
tael.apiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
tael.apiServerEnforcePOST=true

# Compress Http responses for the API server. If not set, enabled for openAPI
# nodes only.
# tael.enableAPIServerGZIPFilter=false

# Password that should be provided when executing protected (administrative) API
# requests.
# Please choose a decent password here. Preferably, use a password generator.
# Password protection is disabled and password is not needed when the API server
# only listens on the localhost interface, i.e. when
# nxt.apiServerHost=127.0.0.1.
tael.adminPassword=alpha

# Set to true to disable the password protection for admin API requests even
# when API server is publicly accessible. Not recommended.
tael.disableAdminPassword=true

# The maximum number of records possible to retrieve with a single request. This
# restriction is not enforced if the admin password is provided, or is not
# needed (disabled or listening on localhost only).
tael.maxAPIRecords=100

# API event registration timeout (seconds). The timeout is reset each time an
# event wait request is received from the application. The minimum value is 15
# seconds.
tael.apiEventTimeout=300

# Maximum number of applications with active event registrations.
tael.apiMaxEventUsers=32

# Maximum file size accepted for upload, in bytes. Default and minimum value
# accepted is 43008 (42 kbytes).
#nxt.maxUploadFileSize=43008

# If an unsigned transaction is submitted with insufficient fee, set the fee to
# the minimum fee calculated for this transaction instead, as if feeNQT=0 has
# been specified. Default is false.
tael.correctInvalidFees=false

# APIs to disable, as a semicolon separated list.
tael.disabledAPIs=

# Groups of APIs to disable, as a semicolon separated list of API tag names.
tael.disabledAPITags=

# Enables the API proxy. Requests are forwarded to a randomly chosen peer
# providing openAPI service. Outgoing transactions are signed locally - the
# secret phrase is never sent to the remote peer.
# Used by light clients or when the blockchain is not yet downloaded.
# For openAPI nodes, the API proxy remains disabled, ignoring this setting.
# For light clients, the API proxy is always enabled, ignoring this setting.
tael.enableAPIProxy=true

# Operate as light client. Blockchain is not downloaded and processed, instead
# the API proxy is used (see nxt.enableAPIProxy).
# Light clients are not advertised as providing openAPI service even if they do
# have their API publicly accessible.
tael.isLightClient=false

# If set, all requests will be forwarded to the specified openAPI peer
tael.forceAPIProxyServerURL=

# The period remote API servers are blacklisted when not functioning (in
# milliseconds).
# The API proxy blacklisting mechanism is in addition to the peers blacklisting
# - if a peer is blacklisted, it won't be used by the proxy, but it is possible
# that a peer is online and correctly functioning, and only its open API is
# blocked (e.g. by firewall)
tael.apiProxyBlacklistingPeriod=1800000

# When the API server is running behind a proxy, use this header to obtain the
# remote host for which the API request was forwarded. Currently only used for
# keeping track of and blacklisting hosts that try to brute force the API admin
# password.
#nxt.forwardedForHeader=X-Forwarded-For


#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#nxt.log=nxt.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#nxt.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
tael.enableLogTraceback=false

# Enable logging of exception stack traces.
tael.enableStackTraces=true

# Enable logging of Jetty messages.
#nxt.debugJetty=false
# Jetty logging is now specified in logging properties.



#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible
# customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The nxt_db folder is expected to be in the current working directory, will be
# created if missing.
# nxt.dbUrl=jdbc:h2:./nxt_db/nxt;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true.
# nxt.testDbUrl=jdbc:h2:./nxt_test_db/nxt;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

tael.dbType=h2
tael.testDbType=h2

tael.dbDir=./taelium_db/taelium
tael.testDbDir=./taelium_test_db/taelium

tael.dbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE
tael.testDbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

tael.dbUsername=sa
tael.testDbUsername=sa

tael.dbPassword=sa
tael.testDbPassword=sa

# Database connection timeout in seconds.
tael.dbLoginTimeout=70

# Database default lock timeout in seconds.
tael.dbDefaultLockTimeout=60

# Database max memory rows limit.
tael.dbMaxMemoryRows=1000000

# Maximum simultaneous database connections.
tael.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, the cache size varies from a minimum of 16MB for heap sizes 160MB
# or less, to a maximum of 256MB for heap sizes 640MB or higher.
tael.dbCacheKB=0

# Enable trimming of derived objects tables. Disabling this will significantly
# worsen performance.
tael.trimDerivedTables=true

# If trimming is enabled, maintain enough previous height records to allow
# rollback of at least that many blocks. Cannot be set to less than 720.
# After increasing this value, a full re-scan also needs to be done in order for
# the previously trimmed records to be re-created and preserved.
tael.maxRollback=800

# When trimming is enabled, it is run every nxt.trimFrequency blocks.
tael.trimFrequency=1000

# Override the lifetime of prunable data to keep them longer, value in seconds.
# Set to -1 to disable pruning. Has no effect if set to less then the minimum
# required lifetime of two weeks (1209600 seconds) on mainnet, or 24 hours
# (86400 seconds) on testnet. Default is 90 days.
tael.maxPrunableLifetime=7776000

# Include expired prunable parts if requested as long as it is still available.
# In order to provide the PRUNABLE peer service, nxt.maxPrunableLifetime must
# be -1 and nxt.includeExpiredPrunable must be true.  The PRUNABLE service means
# the peer will provide expired prunable data to other peers when requested.
tael.includeExpiredPrunable=true

# Threshold for logging database statements (milliseconds).
tael.statementLogThreshold=10000

# Threshold for logging database transactions (milliseconds).
tael.transactionLogThreshold=15000

# Log the average transaction time after this many minutes.
tael.transactionLogInterval=15

# Public keys are by default cached, which consumes 10-15 MB of memory.
tael.enablePublicKeyCache=true

# When trimming or pruning derived tables, do a commit after that many records
# are processed. Default if not set is Integer.MAX_VALUE which prevents such
# intermediate commits.
tael.batchCommitSize=100



#### Blocks and transactions ####

# Delay generation of next block in order to accumulate more transactions in it.
# Waiting for much more than 15 s is not useful as transactions are allowed at
# most 15 s timestamp difference from the block they can be included in.
tael.forgingDelay=20

# Generate and submit the next block before its hit time in response to
# receiving a lower difficulty block. Submitting the block more than 15 s before
# its time however will lead to its rejection.
tael.forgingSpeedup=3

# Maximum number of forging accounts allowed on this node.
tael.maxNumberOfForgers=100

# Verify batches of blocks downloaded from a single peer with that many other
# peers.
tael.numberOfForkConfirmations=0
tael.testnetNumberOfForkConfirmations=0


# Maximum number of account monitors allowed on this node
tael.maxNumberOfMonitors=100


#### ACCOUNT LEDGER ####

# Address of accounts (in RS format) to track balance changes in the ledger
# table, separated by ';'.
# Set to * to track changes for all accounts. Specify no accounts to disable
# the account ledger.
tael.ledgerAccounts=*

# Specify 0 to not log unconfirmed changes, 1 to log unconfirmed changes or 2 to
# log only unconfirmed changes.
tael.ledgerLogUnconfirmed=0



#### Passphrase Recovery Utility ####

# Specify the approximate passphrase that you remember
# recoveryWildcard=hope peac* happen *ouch easy pretend worthless talk them indeed wheel state

# Specify the positions inside the passphrase in which you like to try various options
# The first character position is 1
# recoveryPositions=10,19

# Specify the possible values to use for replacing the unknown positions, unicode characters
# can be specified using the \u notation
# recoveryDictionary=t\u2019ne



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking
# server only.
tael.peerServerDoSFilter.maxRequestsPerSec=30
tael.peerServerDoSFilter.delayMs=1000
tael.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
tael.keyStorePath=keystore
tael.keyStorePassword=password

# keystore type defaults to JKS can be changed to PKCS12.
tael.keyStoreType=JKS


#### Developers only ####

# Maximum number of transactions per block. This is parameterized for load
# testing purposes, but for an existing blockchain should not be changed.
tael.maxNumberOfTransactions=255;

# Maximum peer request size. Should be increased if block or transaction
# size limits are increased.
tael.maxPeerRequestSize=1048576;

# Maximum peer response size. Should be increased if block or transaction
# size limits are increased.
tael.maxPeerResponseSize=1048576;

# Maximum peer websocket message size. Should be increased if block or
# transaction size limits are increased.
tael.maxPeerMessageSize=10485760;

# Force re-validation of blocks and transaction at start.
tael.forceValidate=false

# Force re-build of derived objects tables at start.
tael.forceScan=false

# Scale epoch time for faster forging. Only works when offline.
# nxt.timeMultiplier=1

# Enable the following AddOns, which must also be on the classpath, e.g. placed
# in the addons/classes or addons/lib directory. List of class names, separated
# by semicolon.
#nxt.addOns=nxt.addons.Demo; nxt.addons.AfterStart; nxt.addons.BeforeShutdown

# Demo after start and before shutdown scripts
#nxt.afterStartScript=../bin/afterStart.sh
#nxt.beforeShutdownScript=../bin/beforeShutdown.sh

# NRS normally sets a customized security policy when AddOns are used.
# Set to true to use the default security manager when AddOns are used.
tael.disableSecurityPolicy=false

# Display a custom warning text on the login screen in the client UI.
#nxt.customLoginWarning=

# NRS version.
tael.version=1.0.3
